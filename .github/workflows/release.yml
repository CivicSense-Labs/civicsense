name: Release

on:
  push:
    tags:
      - 'v*.*.*'

env:
  NODE_VERSION: '18'

jobs:
  release:
    name: 🚀 Create Release
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: 📦 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: 📥 Install dependencies
        run: npm ci

      - name: 🔨 Build project
        run: npm run build

      - name: 📝 Generate changelog
        id: changelog
        run: |
          # Get the tag name
          TAG_NAME=${GITHUB_REF#refs/tags/}
          echo "tag_name=$TAG_NAME" >> $GITHUB_OUTPUT

          # Generate changelog from git commits
          PREVIOUS_TAG=$(git describe --tags --abbrev=0 HEAD^ 2>/dev/null || echo "")
          if [ -n "$PREVIOUS_TAG" ]; then
            CHANGELOG=$(git log --pretty=format:"- %s (%h)" $PREVIOUS_TAG..HEAD)
          else
            CHANGELOG=$(git log --pretty=format:"- %s (%h)")
          fi

          # Write changelog to file
          echo "## Changes" > CHANGELOG.md
          echo "$CHANGELOG" >> CHANGELOG.md

          # Also output for use in release
          echo "changelog<<EOF" >> $GITHUB_OUTPUT
          echo "## Changes in $TAG_NAME" >> $GITHUB_OUTPUT
          echo "$CHANGELOG" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - name: 📦 Create release package
        run: |
          mkdir -p release
          tar -czf release/civicsense-${{ steps.changelog.outputs.tag_name }}.tar.gz \
            --exclude=node_modules \
            --exclude=.git \
            --exclude=release \
            .

      - name: 🚀 Create GitHub Release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.changelog.outputs.tag_name }}
          release_name: CivicSense ${{ steps.changelog.outputs.tag_name }}
          body: |
            # CivicSense ${{ steps.changelog.outputs.tag_name }}

            ${{ steps.changelog.outputs.changelog }}

            ## Installation

            ```bash
            # Download and extract
            wget https://github.com/${{ github.repository }}/releases/download/${{ steps.changelog.outputs.tag_name }}/civicsense-${{ steps.changelog.outputs.tag_name }}.tar.gz
            tar -xzf civicsense-${{ steps.changelog.outputs.tag_name }}.tar.gz
            cd civicsense

            # Setup
            make demo
            ```

            ## Docker

            ```bash
            docker pull ghcr.io/${{ github.repository }}:${{ steps.changelog.outputs.tag_name }}
            ```

            ---
            **Full Changelog**: https://github.com/${{ github.repository }}/compare/${{ steps.changelog.outputs.previous_tag }}...${{ steps.changelog.outputs.tag_name }}
          draft: false
          prerelease: ${{ contains(steps.changelog.outputs.tag_name, '-') }}

      - name: 📦 Upload release asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./release/civicsense-${{ steps.changelog.outputs.tag_name }}.tar.gz
          asset_name: civicsense-${{ steps.changelog.outputs.tag_name }}.tar.gz
          asset_content_type: application/gzip

  docker:
    name: 🐳 Build Docker Image
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 🐳 Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: 🔐 Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: 🏷️ Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/${{ github.repository }}
          tags: |
            type=ref,event=tag
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}

      - name: 🔨 Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max